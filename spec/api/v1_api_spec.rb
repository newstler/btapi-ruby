=begin
#BT Test

#You can update this description in `config/locales/en/application.en.yml`.

The version of the OpenAPI document: 1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for BtTest::V1Api
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'V1Api' do
  before do
    # run before each test
    @api_instance = BtTest::V1Api.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of V1Api' do
    it 'should create an instance of V1Api' do
      expect(@api_instance).to be_instance_of(BtTest::V1Api)
    end
  end

  # unit tests for create_goal
  # Add a New Goal
  # @param project_id Project ID
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [Goal]
  describe 'create_goal test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_project
  # Add a New Project
  # @param team_id Team ID
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [Project]
  describe 'create_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_projects_tag
  # Add a New Tag
  # @param team_id Team ID
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [ProjectsTag]
  describe 'create_projects_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_scaffolding_absolutely_abstract_creative_concept
  # Add a New Creative Concept
  # @param team_id Team ID
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [ScaffoldingAbsolutelyAbstractCreativeConcept]
  describe 'create_scaffolding_absolutely_abstract_creative_concept test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_scaffolding_completely_concrete_tangible_thing
  # Add a New Tangible Thing
  # @param absolutely_abstract_creative_concept_id Creative Concept ID
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [ScaffoldingCompletelyConcreteTangibleThing]
  describe 'create_scaffolding_completely_concrete_tangible_thing test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_team
  # Add a New Team
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [Team]
  describe 'create_team test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_webhooks_outgoing_endpoint
  # Add a New Endpoint
  # @param team_id Team ID
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [WebhooksOutgoingEndpoint]
  describe 'create_webhooks_outgoing_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_goal
  # Delete a Goal
  # @param id Goal ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_goal test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_project
  # Delete a Project
  # @param id Project ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_projects_tag
  # Delete a Tag
  # @param id Tag ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_projects_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_scaffolding_absolutely_abstract_creative_concept
  # Delete a Creative Concept
  # @param id Creative Concept ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_scaffolding_absolutely_abstract_creative_concept test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_scaffolding_completely_concrete_tangible_thing
  # Delete a Tangible Thing
  # @param id Tangible Thing ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_scaffolding_completely_concrete_tangible_thing test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_webhooks_outgoing_endpoint
  # Delete a Endpoint
  # @param id Endpoint ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_webhooks_outgoing_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_goal
  # Retrieve a Goal
  # @param id Goal ID
  # @param [Hash] opts the optional parameters
  # @return [Goal]
  describe 'get_goal test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_me
  # Retrieve info about the current user
  # @param [Hash] opts the optional parameters
  # @return [Me]
  describe 'get_me test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project
  # Retrieve a Project
  # @param id Project ID
  # @param [Hash] opts the optional parameters
  # @return [Project]
  describe 'get_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_projects_tag
  # Retrieve a Tag
  # @param id Tag ID
  # @param [Hash] opts the optional parameters
  # @return [ProjectsTag]
  describe 'get_projects_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_scaffolding_absolutely_abstract_creative_concept
  # Retrieve a Creative Concept
  # @param id Creative Concept ID
  # @param [Hash] opts the optional parameters
  # @return [ScaffoldingAbsolutelyAbstractCreativeConcept]
  describe 'get_scaffolding_absolutely_abstract_creative_concept test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_scaffolding_completely_concrete_tangible_thing
  # Retrieve a Tangible Thing
  # @param id Tangible Thing ID
  # @param [Hash] opts the optional parameters
  # @return [ScaffoldingCompletelyConcreteTangibleThing]
  describe 'get_scaffolding_completely_concrete_tangible_thing test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_team
  # Retrieve a Team
  # @param id Team ID
  # @param [Hash] opts the optional parameters
  # @return [Team]
  describe 'get_team test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_webhooks_outgoing_delivery
  # Retrieve a Delivery
  # @param id Delivery ID
  # @param [Hash] opts the optional parameters
  # @return [WebhooksOutgoingDelivery]
  describe 'get_webhooks_outgoing_delivery test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_webhooks_outgoing_delivery_attempt
  # Retrieve a Delivery Attempt
  # @param id Delivery Attempt ID
  # @param [Hash] opts the optional parameters
  # @return [WebhooksOutgoingDeliveryAttempt]
  describe 'get_webhooks_outgoing_delivery_attempt test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_webhooks_outgoing_endpoint
  # Retrieve a Endpoint
  # @param id Endpoint ID
  # @param [Hash] opts the optional parameters
  # @return [WebhooksOutgoingEndpoint]
  describe 'get_webhooks_outgoing_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_goals
  # List Goals
  # @param project_id Project ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page of results to fetch.
  # @option opts [Integer] :per_page Number of results to return per page.
  # @return [Array<Goal>]
  describe 'list_goals test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_projects
  # List Projects
  # @param team_id Team ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page of results to fetch.
  # @option opts [Integer] :per_page Number of results to return per page.
  # @return [Array<Project>]
  describe 'list_projects test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_projects_tags
  # List Tags
  # @param team_id Team ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page of results to fetch.
  # @option opts [Integer] :per_page Number of results to return per page.
  # @return [Array<ProjectsTag>]
  describe 'list_projects_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_scaffolding_absolutely_abstract_creative_concepts
  # List Creative Concepts
  # @param team_id Team ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page of results to fetch.
  # @option opts [Integer] :per_page Number of results to return per page.
  # @return [Array<ScaffoldingAbsolutelyAbstractCreativeConcept>]
  describe 'list_scaffolding_absolutely_abstract_creative_concepts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_scaffolding_completely_concrete_tangible_things
  # List Tangible Things
  # @param absolutely_abstract_creative_concept_id Creative Concept ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page of results to fetch.
  # @option opts [Integer] :per_page Number of results to return per page.
  # @return [Array<ScaffoldingCompletelyConcreteTangibleThing>]
  describe 'list_scaffolding_completely_concrete_tangible_things test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_teams
  # List Teams
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page of results to fetch.
  # @option opts [Integer] :per_page Number of results to return per page.
  # @return [Array<Team>]
  describe 'list_teams test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_webhooks_outgoing_delivery_attempts
  # List Delivery Attempts
  # @param delivery_id Delivery ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page of results to fetch.
  # @option opts [Integer] :per_page Number of results to return per page.
  # @return [Array<WebhooksOutgoingDeliveryAttempt>]
  describe 'list_webhooks_outgoing_delivery_attempts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_webhooks_outgoing_deliverys
  # List Deliveries
  # @param endpoint_id Endpoint ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page of results to fetch.
  # @option opts [Integer] :per_page Number of results to return per page.
  # @return [Array<WebhooksOutgoingDelivery>]
  describe 'list_webhooks_outgoing_deliverys test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_webhooks_outgoing_endpoints
  # List Endpoints
  # @param team_id Team ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page of results to fetch.
  # @option opts [Integer] :per_page Number of results to return per page.
  # @return [Array<WebhooksOutgoingEndpoint>]
  describe 'list_webhooks_outgoing_endpoints test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_goal
  # Update a Goal
  # @param id Goal ID
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [Goal]
  describe 'update_goal test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_project
  # Update a Project
  # @param id Project ID
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [Project]
  describe 'update_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_projects_tag
  # Update a Tag
  # @param id Tag ID
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [ProjectsTag]
  describe 'update_projects_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_scaffolding_absolutely_abstract_creative_concept
  # Update a Creative Concept
  # @param id Creative Concept ID
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [ScaffoldingAbsolutelyAbstractCreativeConcept]
  describe 'update_scaffolding_absolutely_abstract_creative_concept test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_scaffolding_completely_concrete_tangible_thing
  # Update a Tangible Thing
  # @param id Tangible Thing ID
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [ScaffoldingCompletelyConcreteTangibleThing]
  describe 'update_scaffolding_completely_concrete_tangible_thing test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_team
  # Update a Team
  # @param id Team ID
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [Team]
  describe 'update_team test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_webhooks_outgoing_endpoint
  # Update a Endpoint
  # @param id Endpoint ID
  # @param [Hash] opts the optional parameters
  # @option opts [UNKNOWN_BASE_TYPE] :unknown_base_type 
  # @return [WebhooksOutgoingEndpoint]
  describe 'update_webhooks_outgoing_endpoint test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
